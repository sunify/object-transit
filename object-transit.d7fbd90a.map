{"version":3,"sources":["node_modules/run-with-fps/index.js","node_modules/tweeen/src/index.js","node_modules/rgb-hex/index.js","node_modules/hex-rgb/index.js","src/index.js","index.js"],"names":["module","exports","red","green","blue","alpha","isPercent","toString","includes","res","match","map","Number","undefined","parseFloat","TypeError","Math","round","slice","hexChars","match3or4Hex","match6or8Hex","nonHexChars","RegExp","validHexSize","hex","options","test","replace","length","parseInt","substring","repeat","num","format","hexColorRegex","isNumber","n","isColor","c","getValueType","v","parseValue","value","type","newNumber","start","end","percent","newValue","keyType","i","rgbHex","transit","source","cb","state","currentTweeen","to","target","duration","easing","targetKeys","Object","keys","filter","key","forEach","keyTypes","reduce","types","patch","assign","obj","document","getElementById","jsonInput","resultInput","initialStyle","bg1","bg2","scale","left","count","applyStyle","style","transform","color","background","innerText","JSON","stringify","blockStyle","transitOptions","fps","t","prevValue","addEventListener","parse"],"mappings":"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","file":"object-transit.d7fbd90a.map","sourceRoot":"..","sourcesContent":["module.exports = function runWithFPS (fn, fps) {\n  var interval = 1000 / fps;\n  var then = Date.now();\n  var stopped = false;\n\n  function run() {\n    if (!stopped) {\n      requestAnimationFrame(run);\n    }\n\n    var now = Date.now();\n    var delta = now - then;\n\n    if (delta > interval && !stopped) {\n      then = now - (delta % interval);\n      fn(now);\n    }\n  };\n\n  requestAnimationFrame(run);\n  fn(Date.now());\n\n  return function() {\n    stopped = true;\n  }\n};","var runWithFps = require('run-with-fps');\n\nfunction linear(a) {\n  return a;\n}\n\nfunction tween(from, to, cb, params) {\n  params = params || {};\n  var duration = params.duration || 300;\n  var easing = params.easing || linear;\n  var fps = params.fps || 60;\n  var end = params.end;\n\n  var stopped = false;\n  var start = Date.now();\n\n  var stop = runWithFps(function() {\n    var spent = Math.min(Date.now() - start, duration);\n    cb(from + (to - from) * easing(spent / duration));\n    if (spent === duration || stopped) {\n      stop();\n      if (typeof end === 'function') {\n        end();\n      }\n    }\n  }, fps);\n\n  return function() {\n    stopped = true;\n  };\n}\n\nmodule.exports = tween;\n","'use strict';\n/* eslint-disable no-mixed-operators */\nmodule.exports = (red, green, blue, alpha) => {\n\tconst isPercent = (red + (alpha || '')).toString().includes('%');\n\n\tif (typeof red === 'string') {\n\t\tconst res = red.match(/(0?\\.?\\d{1,3})%?\\b/g).map(Number);\n\t\t// TODO: use destructuring when targeting Node.js 6\n\t\tred = res[0];\n\t\tgreen = res[1];\n\t\tblue = res[2];\n\t\talpha = res[3];\n\t} else if (alpha !== undefined) {\n\t\talpha = parseFloat(alpha);\n\t}\n\n\tif (typeof red !== 'number' ||\n\t\ttypeof green !== 'number' ||\n\t\ttypeof blue !== 'number' ||\n\t\tred > 255 ||\n\t\tgreen > 255 ||\n\t\tblue > 255) {\n\t\tthrow new TypeError('Expected three numbers below 256');\n\t}\n\n\tif (typeof alpha === 'number') {\n\t\tif (!isPercent && alpha >= 0 && alpha <= 1) {\n\t\t\talpha = Math.round(255 * alpha);\n\t\t} else if (isPercent && alpha >= 0 && alpha <= 100) {\n\t\t\talpha = Math.round(255 * alpha / 100);\n\t\t} else {\n\t\t\tthrow new TypeError(`Expected alpha value (${alpha}) as a fraction or percentage`);\n\t\t}\n\t\talpha = (alpha | 1 << 8).toString(16).slice(1);\n\t} else {\n\t\talpha = '';\n\t}\n\n\treturn ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1) + alpha;\n};\n","'use strict';\n\nconst hexChars = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexChars}]{3}[${hexChars}]?`;\nconst match6or8Hex = `#?[${hexChars}]{6}([${hexChars}]{2})?`;\n\nconst nonHexChars = new RegExp(`[^#${hexChars}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nmodule.exports = function (hex, options = {}) {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alpha = 255;\n\n\tif (hex.length === 8) {\n\t\talpha = parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.substring(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talpha = parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.substring(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst num = parseInt(hex, 16);\n\tconst red = num >> 16;\n\tconst green = (num >> 8) & 255;\n\tconst blue = num & 255;\n\n\treturn options.format === 'array' ?\n\t\t[red, green, blue, alpha] :\n\t\t{red, green, blue, alpha};\n};\n","import tweeen from 'tweeen';\nimport rgbHex from 'rgb-hex';\nimport hexRgb from 'hex-rgb';\n\nconst hexColorRegex = /^#(?=[0-9a-fA-F]*$)(?:.{3}|.{6})$/;\nconst isNumber = n => typeof n === 'number';\nconst isColor = c => hexColorRegex.test(c);\n\nconst getValueType = v => {\n  if (isNumber(v)) {\n    return 'number';\n  }\n\n  if (isColor(v)) {\n    return 'color';\n  }\n\n  return undefined;\n}\n\nconst parseValue = (value, type) => {\n  if (type === 'color') {\n    return hexRgb(value, { format: 'array' });\n  }\n\n  return value;\n}\n\nconst newNumber = (start, end, percent) => {\n  return start + (end - start) * percent;\n}\n\nconst newValue = (keyType, percent) => {\n  if (keyType.type === 'color') {\n    const value = keyType.start.slice(0, 3).map((n, i) => newNumber(n, keyType.end[i], percent))\n    return `#${rgbHex(...value)}`;\n  }\n  return newNumber(keyType.start, keyType.end, percent);\n}\n\nexport default function transit(source, cb) {\n  const state = { ...source };\n  let currentTweeen;\n\n  return {\n    to(target, { duration = 300, easing, end, ...options } = {}) {\n      const targetKeys = Object.keys(target).filter(key => getValueType(target[key]) !== undefined);\n      const keys = targetKeys.filter(key => getValueType(state[key]) !== undefined);\n\n      targetKeys.filter(key => getValueType(state[key]) === undefined).forEach(key => {\n        state[key] = target[key];\n      });\n\n      const keyTypes = (\n        keys\n          .reduce((types, key) => {\n            const type = getValueType(state[key]);\n            types[key] = {\n              type,\n              start: parseValue(state[key], type),\n              end: parseValue(target[key], type),\n            }\n\n            return types;\n          }, {})\n      );\n\n      if (currentTweeen) {\n        currentTweeen();\n      }\n\n      currentTweeen = tweeen(0, 1, (percent) => {\n        const patch = {};\n        keys.forEach(key => {\n          patch[key] = newValue(keyTypes[key], percent);\n        });\n        Object.assign(state, patch);\n        if (typeof cb === 'function') {\n          cb(state);\n        }\n      }, {\n        ...options,\n        duration,\n        easing,\n        end: typeof end === 'function' && (() => {\n          end(state);\n        }),\n      });\n\n      return currentTweeen;\n    }\n  };\n}","import transit from './src/index';\n\nconst obj = document.getElementById('obj');\nconst jsonInput = document.getElementById('json');\nconst resultInput = document.getElementById('result');\n\nconst initialStyle = { bg1: '#0fc', bg2: '#f00', scale: 1.2, left: 10, count: 0 };\n\nconst applyStyle = (style) => {\n  obj.style.transform = `translate(${style.left}px, 40px) scale(${style.scale})`;\n  obj.style.color = style.color || '#000';\n  obj.style.background = `linear-gradient(${style.bg1}, ${style.bg2})`;\n  obj.innerText = Math.round(style.count);\n  resultInput.value = JSON.stringify(style, undefined, 2);\n};\n\nconst blockStyle = transit(initialStyle, applyStyle);\napplyStyle(initialStyle);\n\nconst transitOptions = {\n  duration: 300,\n  fps: 60,\n  easing: t => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n};\n\nlet prevValue = jsonInput.value;\njsonInput.addEventListener('keyup', () => {\n  if (prevValue !== jsonInput.value) {\n    blockStyle.to(JSON.parse(jsonInput.value), transitOptions);\n    prevValue = jsonInput.value;\n  }\n});"]}